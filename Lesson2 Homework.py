
#------------- Задача 1 ------------------##

list1 = [5.6, False, 1001, (56, 85), None, {'Moscow','London'},
4759, "String for learning", b'this is byte']

for item in list1:
  print(f"Тип {item}: {type(item)}")

#------------ Задача 2 ----------------------#

#Для списка реализовать обмен значений 
#соседних элементов, т.е. Значениями обмениваются 
#элементы с индексами 0 и 1, 2 и 3 и т.д. 
#При нечетном количестве элементов 
#последний сохранить на своем месте. 
#Для заполнения списка элементов 
#необходимо использовать функцию input().

new = list(input("Введите элементы списка: ").split())
for item in range(1, len(new), 2):
  new[item - 1], new[item] = new[item], new [item - 1]
  print("Новый список: ", new)
  

#------------- Задача 3 --------------------#

#Пользователь вводит месяц в виде целого числа
#от 1 до 12. Сообщить к какому времени года 
#относится месяц (зима, весна, лето, осень). 
#Напишите решения через list и через dict.


#Вариант 1
month = int(input("Введите номер месяца: "))
list1 = [1, "зима", "зима", "весна", "весна", "весна", "лето", "лето", "лето", "осень", "осень", "осень", "зима"]
if month <= 12 and month >= 0:
  print(list1[month])
elif month <= 0 or month > 12:
  print("Такого месяца не существует. Повторите попытку")

#Вариант 2
month = int(input("Введите номер месяца: "))
dict1 = {1: "зима", 2: "зима", 3: "весна", 4: "весна", 5: "весна", 6: "лето", 7: "лето", 8: "лето", 9: "осень", 10: "осень", 11: "осень", 12: "зима"}
if month >= 0 and month < 12:
  print(dict1[month])
elif month <0 or month > 12:
  print("Такого месяца не существует. Повторите попытку")

#------------------ Задача 4 ----------------#
#Пользователь вводит строку из нескольких слов, 
#разделённых пробелами. 
#Вывести каждое слово с новой строки. 
#Строки необходимо пронумеровать. 
#Если в слово длинное, 
#выводить только первые 10 букв в слове.

str_user = list(input("Введите строку, разделяя слова пробелами").split())
for l_item, val in enumerate(str_user, 1):
  print(str(l_item) + ') ' + str(val[:11]))


##----------------- Задача 5 ---------------#

#Реализовать структуру «Рейтинг», 
#представляющую собой не возрастающий набор 
#натуральных чисел. 
#У пользователя необходимо запрашивать 
#новый элемент рейтинга. 
#Если в рейтинге существуют элементы 
#с одинаковыми значениями, то новый элемент 
#с тем же значением должен разместиться после них.

new = int(input("Введите новый элемент рейтинга: "))
rating = [6, 7, 9, 6, 1]

for item in range(len(rating)):
  if rating[item] == new:
    rating.insert(item +1, new)
    print(f"Результат: {rating}")
    break
  elif item != new:
    rating.append(new)
    print(f"Результат: {rating}")
    break


